//=============================================================================
//
// ホーミング型エネミー処理 [enemyhoming.cpp]
// Author : 山田陵太
//
//=============================================================================
#include "enemyhoming.h"
#include "game.h"
#include "player.h"
#include "bullet.h"

//=============================================================================
//マクロ定義
//=============================================================================
#define HOMING_ATK 5 //ホーミング型の攻撃力
#define HOMING_BULLET_SPEED 10.0f //ホーミング型の弾の速度

//=============================================================================
//ホーミング型エネミークラスのコンストラクタ
//=============================================================================
CEnemyHoming::CEnemyHoming()
{
}

//=============================================================================
//ホーミング型エネミークラスのデストラクタ
//=============================================================================
CEnemyHoming::~CEnemyHoming()
{
}

//=============================================================================
//ホーミング型エネミークラスの初期化処理
//=============================================================================
HRESULT CEnemyHoming::Init(void)
{
	CEnemy::Init();
	return S_OK;
}

//=============================================================================
//ホーミング型エネミークラスの終了処理
//=============================================================================
void CEnemyHoming::Uninit(void)
{
	CEnemy::Uninit();
}

//=============================================================================
//ホーミング型エネミークラスの更新処理
//=============================================================================
void CEnemyHoming::Update(void)
{
	CEnemy::Update();
}

//=============================================================================
//ホーミング型エネミークラスの描画処理
//=============================================================================
void CEnemyHoming::Draw(void)
{
	CEnemy::Draw();
}

//=============================================================================
//ホーミング型エネミークラスの攻撃処理
//=============================================================================
void CEnemyHoming::Attack(void)
{
	//プレイヤーの位置情報を取得
	D3DXVECTOR3 playerPos = CGame::GetPlayer()->GetPos();

	m_nCounter++;

	if (m_nCounter % 80 == 0 && m_pos.x >= playerPos.x)
	{
		//角度θの計算（ラジアン）
		float fAngle = atan2f((playerPos.y - m_pos.y), (playerPos.x - m_pos.x));

		//移動量を求める
		D3DXVECTOR3 move = D3DXVECTOR3(cosf(fAngle) * HOMING_BULLET_SPEED, sinf(fAngle) * HOMING_BULLET_SPEED, 0.0f);

		//バレットの生成
		CBullet::Create(m_pos, move, BULLET_SIZE, COLOR_RED,
			CBullet::BULLET_USER_ENEMY, CBullet::BULLET_TYPE_HOMING, HOMING_ATK);
	}
}
