//=============================================================================
//
// エネミー処理 [enemynomral.cpp]
// Author : 山田陵太
//
//=============================================================================
#include "enemynomral.h"
#include "game.h"
#include "player.h"
#include "bullet.h"

//=============================================================================
//マクロ定義
//=============================================================================
#define NOMRAL_ATK 3 //ノーマルの攻撃力

//=============================================================================
//ノーマルエネミークラスのコンストラクタ
//=============================================================================
CEnemyNomral::CEnemyNomral()
{
}

//=============================================================================
//ノーマルエネミークラスのデストラクタ
//=============================================================================
CEnemyNomral::~CEnemyNomral()
{
}

//=============================================================================
//ノーマルエネミークラスの初期化処理
//=============================================================================
HRESULT CEnemyNomral::Init(void)
{
	CEnemy::Init();
	return S_OK;
}

//=============================================================================
//ノーマルエネミークラスの終了処理
//=============================================================================
void CEnemyNomral::Uninit(void)
{
	CEnemy::Uninit();
}

//=============================================================================
//ノーマルエネミークラスの更新処理
//=============================================================================
void CEnemyNomral::Update(void)
{
	CEnemy::Update();
}

//=============================================================================
//ノーマルエネミークラスの描画処理
//=============================================================================
void CEnemyNomral::Draw(void)
{
	CEnemy::Draw();
}

//=============================================================================
//ノーマルエネミークラスの攻撃処理
//=============================================================================
void CEnemyNomral::Attack(void)
{
	//プレイヤーの位置情報を取得
	D3DXVECTOR3 playerPos = CGame::GetPlayer()->GetPos();

	m_nCounter++;

	if (m_nCounter % 120 == 0 && m_pos.x >= playerPos.x)
	{
		D3DXVECTOR3 move = D3DXVECTOR3(-10.0f, 0.0f, 0.0f);

		//バレットの生成
		CBullet::Create(m_pos, move, BULLET_SIZE, COLOR_RED,
			CBullet::BULLET_USER_ENEMY, CBullet::BULLET_TYPE_NORMAL, NOMRAL_ATK);
	}
}
